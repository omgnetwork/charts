apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "ewallet.fullname" . }}-init-migrate-settings
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ template "ewallet.name" . }}
    helm.sh/chart: {{ template "ewallet.chart" . }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "23"
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  template:
    metadata:
      name: {{ template "ewallet.fullname" . }}-init-migrate-settings
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: {{ template "ewallet.name" . }}
    spec:
      restartPolicy: Never
      containers:
        - name: {{ .Chart.Name }}-init-migrate-settings
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - bin/ewallet
            - config
          args:
            - -m
            - -y
          env:
{{- /* ================================================ */}}
{{- /* Application Environment */}}
{{- /* ================================================ */}}
            - name: MIX_ENV
              value: prod
{{- /* ================================================ */}}
{{- /* Application Configuration */}}
{{- /* ================================================ */}}
            - name: EWALLET_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "ewallet.fullname" . }}-init
                  key: ewallet-secret-key
            - name: LOCAL_LEDGER_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "ewallet.fullname" . }}-init
                  key: local-ledger-secret-key
{{- /* ================================================ */}}
{{- /* Database Configuration */}}
{{- /* ================================================ */}}
{{- if .Values.postgresql.enabled }}
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "ewallet.fullname" . }}-postgresql
                  key: ewallet-password
            - name: DATABASE_URL
              value: postgresql://ewallet:$(DATABASE_PASSWORD)@{{ template "postgresql.fullname" . }}/ewallet
            - name: LOCAL_LEDGER_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "ewallet.fullname" . }}-postgresql
                  key: local-ledger-password
            - name: LOCAL_LEDGER_DATABASE_URL
              value: postgresql://ledger:$(LOCAL_LEDGER_DATABASE_PASSWORD)@{{ template "postgresql.fullname" . }}/local_ledger
{{- else }}
            - name: DATABASE_URL
              value: {{ required "ewalletDbUrl is required to be set" .Values.ewalletDbUrl | quote }}
            - name: LOCAL_LEDGER_DATABASE_URL
              value: {{ required "localLedgerDbUrl is required to be set" .Values.localLedgerDbUrl | quote }}
{{- end }}
{{- /* ================================================ */}}
{{- /* Blockchain Configuration */}}
{{- /* ================================================ */}}
{{- if .Values.ethereumNodeUrl | default "" | ne "" }}
            - name: JSON_RPC_GETH_NODE_URL
              value: {{ .Values.ethereumNodeUrl }}
{{- end }}
{{- /* ================================================ */}}
{{- /* Monitoring */}}
{{- /* ================================================ */}}
{{- if .Values.sentryDsn | default "" | ne "" }}
            - name: SENTRY_DSN
              value: {{ .Values.sentryDsn }}
{{- end }}
{{- if .Values.appSignalPushApiKey | default "" | ne "" }}
            - name: APPSIGNAL_PUSH_API_KEY
              value: {{ .Values.appSignalPushApiKey }}
{{- end }}
{{- if .Values.appSignalAppEnv | default "" | ne "" }}
            - name: APPSIGNAL_APP_ENV
              value: {{ .Values.appSignalAppEnv }}
{{- end }}
{{- if .Values.appSignalVmMetrics | default "" | ne "" }}
            - name: METRICS
              value: {{ .Values.appSignalVmMetrics | quote }}
{{- end }}
{{- /* ================================================ */}}
{{- /* Migration */}}
{{- /* ================================================ */}}
{{- if .Values.baseUrl | default "" | ne "" }}
            - name: BASE_URL
              value: {{ .Values.baseUrl | quote }}
{{- end }}
{{- if .Values.standalone | default "" | ne "" }}
            - name: ENABLE_STANDALONE
              value: {{ .Values.standalone | quote }}
{{- end }}
{{- if .Values.balanceCachingStrategy | default "" | ne "" }}
            - name: BALANCE_CACHING_STRATEGY
              value: {{ .Values.balanceCachingStrategy | quote }}
{{- end }}
{{- if .Values.redirectPrefixes | default "" | ne "" }}
            - name: REDIRECT_URL_PREFIXES
              value: {{ .Values.redirectPrefixes | quote }}
{{- end }}
{{- if eq .Values.emailAdapter "smtp" }}
            - name: EMAIL_ADAPTER
              value: "smtp"
{{- if .Values.senderEmail | default "" | ne "" }}
            - name: SENDER_EMAIL
              value: {{ .Values.senderEmail | quote }}
{{- end }}
{{- if .Values.smtpHost | default "" | ne "" }}
            - name: SMTP_HOST
              value: {{ .Values.smtpHost | quote }}
{{- end }}
{{- if .Values.smtpPort | default "" | ne "" }}
            - name: SMTP_PORT
              value: {{ .Values.smtpPort | quote }}
{{- end }}
{{- if .Values.smtpUser | default "" | ne "" }}
            - name: SMTP_USER
              value: {{ .Values.smtpUser | quote }}
{{- end }}
{{- if .Values.smtpPassword | default "" | ne "" }}
            - name: SMTP_PASSWORD
              value: {{ .Values.smtpPassword | quote }}
{{- end }}
{{- else if .Values.emailAdapter | default "" | ne "" }}
            - name: EMAIL_ADAPTER
              value: {{ .Values.emailAdapter | quote }}
{{- end }}
{{- if eq .Values.fileStorageAdapter "local" }}
            - name: FILE_STORAGE_ADAPTER
              value: "local"
{{- else if eq .Values.fileStorageAdapter "aws" }}
            - name: FILE_STORAGE_ADAPTER
              value: "aws"
            - name: AWS_BUCKET
              value: {{ .Values.awsBucket | quote }}
            - name: AWS_REGION
              value: {{ .Values.awsRegion | quote }}
            - name: AWS_ACCESS_KEY_ID
              value: {{ .Values.awsAccessKeyId | quote }}
            - name: AWS_SECRET_ACCESS_KEY
              value: {{ .Values.awsSecretAccessKey | quote }}
{{- else if eq .Values.fileStorageAdapter "gcs" }}
            - name: FILE_STORAGE_ADAPTER
              value: gcs
            - name: GCS_BUCKET
              value: {{ .Values.gcsBucket | quote }}
            - name: GCS_CREDENTIALS
              value: {{ .Values.gcsCredentialsPath | quote }}
{{- end }}
{{- with .Values.image.pullSecrets }}
      imagePullSecrets:
{{ toYaml . | trim | indent 8 }}
{{- end }}
